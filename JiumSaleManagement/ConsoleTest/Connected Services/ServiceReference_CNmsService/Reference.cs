//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleTest.ServiceReference_CNmsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="audiohistory", Namespace="http://schemas.datacontract.org/2004/07/Xwsw.Model.NMS")]
    [System.SerializableAttribute()]
    public partial class audiohistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long _clientidField;
        
        private string _endtimeField;
        
        private string _filenameField;
        
        private int _filesizeField;
        
        private long _idField;
        
        private string _pathnameField;
        
        private string _remarkField;
        
        private string _starttimeField;
        
        private int _statustagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long _clientid {
            get {
                return this._clientidField;
            }
            set {
                if ((this._clientidField.Equals(value) != true)) {
                    this._clientidField = value;
                    this.RaisePropertyChanged("_clientid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _endtime {
            get {
                return this._endtimeField;
            }
            set {
                if ((object.ReferenceEquals(this._endtimeField, value) != true)) {
                    this._endtimeField = value;
                    this.RaisePropertyChanged("_endtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _filename {
            get {
                return this._filenameField;
            }
            set {
                if ((object.ReferenceEquals(this._filenameField, value) != true)) {
                    this._filenameField = value;
                    this.RaisePropertyChanged("_filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _filesize {
            get {
                return this._filesizeField;
            }
            set {
                if ((this._filesizeField.Equals(value) != true)) {
                    this._filesizeField = value;
                    this.RaisePropertyChanged("_filesize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _pathname {
            get {
                return this._pathnameField;
            }
            set {
                if ((object.ReferenceEquals(this._pathnameField, value) != true)) {
                    this._pathnameField = value;
                    this.RaisePropertyChanged("_pathname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _remark {
            get {
                return this._remarkField;
            }
            set {
                if ((object.ReferenceEquals(this._remarkField, value) != true)) {
                    this._remarkField = value;
                    this.RaisePropertyChanged("_remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _starttime {
            get {
                return this._starttimeField;
            }
            set {
                if ((object.ReferenceEquals(this._starttimeField, value) != true)) {
                    this._starttimeField = value;
                    this.RaisePropertyChanged("_starttime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _statustag {
            get {
                return this._statustagField;
            }
            set {
                if ((this._statustagField.Equals(value) != true)) {
                    this._statustagField = value;
                    this.RaisePropertyChanged("_statustag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="groupinfo", Namespace="http://schemas.datacontract.org/2004/07/Xwsw.Model.NMS")]
    [System.SerializableAttribute()]
    public partial class groupinfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string _createtimeField;
        
        private int _idField;
        
        private int _owneridField;
        
        private string _remarkField;
        
        private int _statusField;
        
        private string _tagnameField;
        
        private string _updatetimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _createtime {
            get {
                return this._createtimeField;
            }
            set {
                if ((object.ReferenceEquals(this._createtimeField, value) != true)) {
                    this._createtimeField = value;
                    this.RaisePropertyChanged("_createtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _ownerid {
            get {
                return this._owneridField;
            }
            set {
                if ((this._owneridField.Equals(value) != true)) {
                    this._owneridField = value;
                    this.RaisePropertyChanged("_ownerid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _remark {
            get {
                return this._remarkField;
            }
            set {
                if ((object.ReferenceEquals(this._remarkField, value) != true)) {
                    this._remarkField = value;
                    this.RaisePropertyChanged("_remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _status {
            get {
                return this._statusField;
            }
            set {
                if ((this._statusField.Equals(value) != true)) {
                    this._statusField = value;
                    this.RaisePropertyChanged("_status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _tagname {
            get {
                return this._tagnameField;
            }
            set {
                if ((object.ReferenceEquals(this._tagnameField, value) != true)) {
                    this._tagnameField = value;
                    this.RaisePropertyChanged("_tagname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _updatetime {
            get {
                return this._updatetimeField;
            }
            set {
                if ((object.ReferenceEquals(this._updatetimeField, value) != true)) {
                    this._updatetimeField = value;
                    this.RaisePropertyChanged("_updatetime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="groupterminal", Namespace="http://schemas.datacontract.org/2004/07/Xwsw.Model.NMS")]
    [System.SerializableAttribute()]
    public partial class groupterminal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string _createtimeField;
        
        private string _deltimeField;
        
        private int _groupidField;
        
        private int _idField;
        
        private bool _isdelField;
        
        private int _statusField;
        
        private int _terminalidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _createtime {
            get {
                return this._createtimeField;
            }
            set {
                if ((object.ReferenceEquals(this._createtimeField, value) != true)) {
                    this._createtimeField = value;
                    this.RaisePropertyChanged("_createtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _deltime {
            get {
                return this._deltimeField;
            }
            set {
                if ((object.ReferenceEquals(this._deltimeField, value) != true)) {
                    this._deltimeField = value;
                    this.RaisePropertyChanged("_deltime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _groupid {
            get {
                return this._groupidField;
            }
            set {
                if ((this._groupidField.Equals(value) != true)) {
                    this._groupidField = value;
                    this.RaisePropertyChanged("_groupid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool _isdel {
            get {
                return this._isdelField;
            }
            set {
                if ((this._isdelField.Equals(value) != true)) {
                    this._isdelField = value;
                    this.RaisePropertyChanged("_isdel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _status {
            get {
                return this._statusField;
            }
            set {
                if ((this._statusField.Equals(value) != true)) {
                    this._statusField = value;
                    this.RaisePropertyChanged("_status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _terminalid {
            get {
                return this._terminalidField;
            }
            set {
                if ((this._terminalidField.Equals(value) != true)) {
                    this._terminalidField = value;
                    this.RaisePropertyChanged("_terminalid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="userinfo", Namespace="http://schemas.datacontract.org/2004/07/Xwsw.Model.NMS")]
    [System.SerializableAttribute()]
    public partial class userinfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string _createtimeField;
        
        private string _emailField;
        
        private int _idField;
        
        private int _levelField;
        
        private string _pwdField;
        
        private string _remarkField;
        
        private int _statusField;
        
        private string _tagnameField;
        
        private string _tokenField;
        
        private string _tokentimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _createtime {
            get {
                return this._createtimeField;
            }
            set {
                if ((object.ReferenceEquals(this._createtimeField, value) != true)) {
                    this._createtimeField = value;
                    this.RaisePropertyChanged("_createtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _email {
            get {
                return this._emailField;
            }
            set {
                if ((object.ReferenceEquals(this._emailField, value) != true)) {
                    this._emailField = value;
                    this.RaisePropertyChanged("_email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _level {
            get {
                return this._levelField;
            }
            set {
                if ((this._levelField.Equals(value) != true)) {
                    this._levelField = value;
                    this.RaisePropertyChanged("_level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _pwd {
            get {
                return this._pwdField;
            }
            set {
                if ((object.ReferenceEquals(this._pwdField, value) != true)) {
                    this._pwdField = value;
                    this.RaisePropertyChanged("_pwd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _remark {
            get {
                return this._remarkField;
            }
            set {
                if ((object.ReferenceEquals(this._remarkField, value) != true)) {
                    this._remarkField = value;
                    this.RaisePropertyChanged("_remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _status {
            get {
                return this._statusField;
            }
            set {
                if ((this._statusField.Equals(value) != true)) {
                    this._statusField = value;
                    this.RaisePropertyChanged("_status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _tagname {
            get {
                return this._tagnameField;
            }
            set {
                if ((object.ReferenceEquals(this._tagnameField, value) != true)) {
                    this._tagnameField = value;
                    this.RaisePropertyChanged("_tagname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _token {
            get {
                return this._tokenField;
            }
            set {
                if ((object.ReferenceEquals(this._tokenField, value) != true)) {
                    this._tokenField = value;
                    this.RaisePropertyChanged("_token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _tokentime {
            get {
                return this._tokentimeField;
            }
            set {
                if ((object.ReferenceEquals(this._tokentimeField, value) != true)) {
                    this._tokentimeField = value;
                    this.RaisePropertyChanged("_tokentime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResInfoModel", Namespace="http://schemas.datacontract.org/2004/07/Xwsw.Model")]
    [System.SerializableAttribute()]
    public partial class ResInfoModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string _dataField;
        
        private ConsoleTest.ServiceReference_CNmsService.ResCode _errCodeField;
        
        private string _errDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _data {
            get {
                return this._dataField;
            }
            set {
                if ((object.ReferenceEquals(this._dataField, value) != true)) {
                    this._dataField = value;
                    this.RaisePropertyChanged("_data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ConsoleTest.ServiceReference_CNmsService.ResCode _errCode {
            get {
                return this._errCodeField;
            }
            set {
                if ((this._errCodeField.Equals(value) != true)) {
                    this._errCodeField = value;
                    this.RaisePropertyChanged("_errCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _errDesc {
            get {
                return this._errDescField;
            }
            set {
                if ((object.ReferenceEquals(this._errDescField, value) != true)) {
                    this._errDescField = value;
                    this.RaisePropertyChanged("_errDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResCode", Namespace="http://schemas.datacontract.org/2004/07/Xwsw.Model")]
    public enum ResCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODE_SUCCESS = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODE_FAILED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODE_EXCEPTION = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="userevent", Namespace="http://schemas.datacontract.org/2004/07/Xwsw.Model.NMS")]
    [System.SerializableAttribute()]
    public partial class userevent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long _eventidField;
        
        private string _eventtimeField;
        
        private long _idField;
        
        private string _remarkField;
        
        private int _useridField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long _eventid {
            get {
                return this._eventidField;
            }
            set {
                if ((this._eventidField.Equals(value) != true)) {
                    this._eventidField = value;
                    this.RaisePropertyChanged("_eventid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _eventtime {
            get {
                return this._eventtimeField;
            }
            set {
                if ((object.ReferenceEquals(this._eventtimeField, value) != true)) {
                    this._eventtimeField = value;
                    this.RaisePropertyChanged("_eventtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _remark {
            get {
                return this._remarkField;
            }
            set {
                if ((object.ReferenceEquals(this._remarkField, value) != true)) {
                    this._remarkField = value;
                    this.RaisePropertyChanged("_remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _userid {
            get {
                return this._useridField;
            }
            set {
                if ((this._useridField.Equals(value) != true)) {
                    this._useridField = value;
                    this.RaisePropertyChanged("_userid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="terminalinfo", Namespace="http://schemas.datacontract.org/2004/07/Xwsw.Model.NMS")]
    [System.SerializableAttribute()]
    public partial class terminalinfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> _activestatusField;
        
        private long _clientidField;
        
        private string _createtimeField;
        
        private int _idField;
        
        private string _remarkField;
        
        private string _remoteipField;
        
        private int _statusField;
        
        private string _tagnameField;
        
        private string _updatetimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> _activestatus {
            get {
                return this._activestatusField;
            }
            set {
                if ((this._activestatusField.Equals(value) != true)) {
                    this._activestatusField = value;
                    this.RaisePropertyChanged("_activestatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long _clientid {
            get {
                return this._clientidField;
            }
            set {
                if ((this._clientidField.Equals(value) != true)) {
                    this._clientidField = value;
                    this.RaisePropertyChanged("_clientid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _createtime {
            get {
                return this._createtimeField;
            }
            set {
                if ((object.ReferenceEquals(this._createtimeField, value) != true)) {
                    this._createtimeField = value;
                    this.RaisePropertyChanged("_createtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _remark {
            get {
                return this._remarkField;
            }
            set {
                if ((object.ReferenceEquals(this._remarkField, value) != true)) {
                    this._remarkField = value;
                    this.RaisePropertyChanged("_remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _remoteip {
            get {
                return this._remoteipField;
            }
            set {
                if ((object.ReferenceEquals(this._remoteipField, value) != true)) {
                    this._remoteipField = value;
                    this.RaisePropertyChanged("_remoteip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _status {
            get {
                return this._statusField;
            }
            set {
                if ((this._statusField.Equals(value) != true)) {
                    this._statusField = value;
                    this.RaisePropertyChanged("_status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _tagname {
            get {
                return this._tagnameField;
            }
            set {
                if ((object.ReferenceEquals(this._tagnameField, value) != true)) {
                    this._tagnameField = value;
                    this.RaisePropertyChanged("_tagname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _updatetime {
            get {
                return this._updatetimeField;
            }
            set {
                if ((object.ReferenceEquals(this._updatetimeField, value) != true)) {
                    this._updatetimeField = value;
                    this.RaisePropertyChanged("_updatetime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="terminaluser", Namespace="http://schemas.datacontract.org/2004/07/Xwsw.Model.NMS")]
    [System.SerializableAttribute()]
    public partial class terminaluser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string _createtimeField;
        
        private string _endtimeField;
        
        private int _idField;
        
        private string _starttimeField;
        
        private int _terminalidField;
        
        private int _useridField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _createtime {
            get {
                return this._createtimeField;
            }
            set {
                if ((object.ReferenceEquals(this._createtimeField, value) != true)) {
                    this._createtimeField = value;
                    this.RaisePropertyChanged("_createtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _endtime {
            get {
                return this._endtimeField;
            }
            set {
                if ((object.ReferenceEquals(this._endtimeField, value) != true)) {
                    this._endtimeField = value;
                    this.RaisePropertyChanged("_endtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _starttime {
            get {
                return this._starttimeField;
            }
            set {
                if ((object.ReferenceEquals(this._starttimeField, value) != true)) {
                    this._starttimeField = value;
                    this.RaisePropertyChanged("_starttime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _terminalid {
            get {
                return this._terminalidField;
            }
            set {
                if ((this._terminalidField.Equals(value) != true)) {
                    this._terminalidField = value;
                    this.RaisePropertyChanged("_terminalid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _userid {
            get {
                return this._useridField;
            }
            set {
                if ((this._useridField.Equals(value) != true)) {
                    this._useridField = value;
                    this.RaisePropertyChanged("_userid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="terminalevent", Namespace="http://schemas.datacontract.org/2004/07/Xwsw.Model.NMS")]
    [System.SerializableAttribute()]
    public partial class terminalevent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long _clientidField;
        
        private long _eventidField;
        
        private string _eventtimeField;
        
        private long _idField;
        
        private bool _notifytagField;
        
        private string _notifytimeField;
        
        private long _terminalidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long _clientid {
            get {
                return this._clientidField;
            }
            set {
                if ((this._clientidField.Equals(value) != true)) {
                    this._clientidField = value;
                    this.RaisePropertyChanged("_clientid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long _eventid {
            get {
                return this._eventidField;
            }
            set {
                if ((this._eventidField.Equals(value) != true)) {
                    this._eventidField = value;
                    this.RaisePropertyChanged("_eventid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _eventtime {
            get {
                return this._eventtimeField;
            }
            set {
                if ((object.ReferenceEquals(this._eventtimeField, value) != true)) {
                    this._eventtimeField = value;
                    this.RaisePropertyChanged("_eventtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool _notifytag {
            get {
                return this._notifytagField;
            }
            set {
                if ((this._notifytagField.Equals(value) != true)) {
                    this._notifytagField = value;
                    this.RaisePropertyChanged("_notifytag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _notifytime {
            get {
                return this._notifytimeField;
            }
            set {
                if ((object.ReferenceEquals(this._notifytimeField, value) != true)) {
                    this._notifytimeField = value;
                    this.RaisePropertyChanged("_notifytime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long _terminalid {
            get {
                return this._terminalidField;
            }
            set {
                if ((this._terminalidField.Equals(value) != true)) {
                    this._terminalidField = value;
                    this.RaisePropertyChanged("_terminalid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="currentalarm", Namespace="http://schemas.datacontract.org/2004/07/Xwsw.Model.NMS")]
    [System.SerializableAttribute()]
    public partial class currentalarm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string _alarmdescField;
        
        private string _alarmnameField;
        
        private int _alarmtypeField;
        
        private string _confirmtimeField;
        
        private string _createtimeField;
        
        private string _handledetailField;
        
        private int _handleridField;
        
        private int _handlestatusField;
        
        private long _idField;
        
        private long _operateidField;
        
        private int _owneridField;
        
        private string _updatetimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _alarmdesc {
            get {
                return this._alarmdescField;
            }
            set {
                if ((object.ReferenceEquals(this._alarmdescField, value) != true)) {
                    this._alarmdescField = value;
                    this.RaisePropertyChanged("_alarmdesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _alarmname {
            get {
                return this._alarmnameField;
            }
            set {
                if ((object.ReferenceEquals(this._alarmnameField, value) != true)) {
                    this._alarmnameField = value;
                    this.RaisePropertyChanged("_alarmname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _alarmtype {
            get {
                return this._alarmtypeField;
            }
            set {
                if ((this._alarmtypeField.Equals(value) != true)) {
                    this._alarmtypeField = value;
                    this.RaisePropertyChanged("_alarmtype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _confirmtime {
            get {
                return this._confirmtimeField;
            }
            set {
                if ((object.ReferenceEquals(this._confirmtimeField, value) != true)) {
                    this._confirmtimeField = value;
                    this.RaisePropertyChanged("_confirmtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _createtime {
            get {
                return this._createtimeField;
            }
            set {
                if ((object.ReferenceEquals(this._createtimeField, value) != true)) {
                    this._createtimeField = value;
                    this.RaisePropertyChanged("_createtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _handledetail {
            get {
                return this._handledetailField;
            }
            set {
                if ((object.ReferenceEquals(this._handledetailField, value) != true)) {
                    this._handledetailField = value;
                    this.RaisePropertyChanged("_handledetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _handlerid {
            get {
                return this._handleridField;
            }
            set {
                if ((this._handleridField.Equals(value) != true)) {
                    this._handleridField = value;
                    this.RaisePropertyChanged("_handlerid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _handlestatus {
            get {
                return this._handlestatusField;
            }
            set {
                if ((this._handlestatusField.Equals(value) != true)) {
                    this._handlestatusField = value;
                    this.RaisePropertyChanged("_handlestatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long _operateid {
            get {
                return this._operateidField;
            }
            set {
                if ((this._operateidField.Equals(value) != true)) {
                    this._operateidField = value;
                    this.RaisePropertyChanged("_operateid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _ownerid {
            get {
                return this._owneridField;
            }
            set {
                if ((this._owneridField.Equals(value) != true)) {
                    this._owneridField = value;
                    this.RaisePropertyChanged("_ownerid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _updatetime {
            get {
                return this._updatetimeField;
            }
            set {
                if ((object.ReferenceEquals(this._updatetimeField, value) != true)) {
                    this._updatetimeField = value;
                    this.RaisePropertyChanged("_updatetime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="historyalarm", Namespace="http://schemas.datacontract.org/2004/07/Xwsw.Model.NMS")]
    [System.SerializableAttribute()]
    public partial class historyalarm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string _alarmdescField;
        
        private string _alarmnameField;
        
        private int _alarmtypeField;
        
        private string _confirmtimeField;
        
        private string _createtimeField;
        
        private string _handledetailField;
        
        private int _handleridField;
        
        private int _handlestatusField;
        
        private long _idField;
        
        private long _operateidField;
        
        private int _owneridField;
        
        private string _updatetimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _alarmdesc {
            get {
                return this._alarmdescField;
            }
            set {
                if ((object.ReferenceEquals(this._alarmdescField, value) != true)) {
                    this._alarmdescField = value;
                    this.RaisePropertyChanged("_alarmdesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _alarmname {
            get {
                return this._alarmnameField;
            }
            set {
                if ((object.ReferenceEquals(this._alarmnameField, value) != true)) {
                    this._alarmnameField = value;
                    this.RaisePropertyChanged("_alarmname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _alarmtype {
            get {
                return this._alarmtypeField;
            }
            set {
                if ((this._alarmtypeField.Equals(value) != true)) {
                    this._alarmtypeField = value;
                    this.RaisePropertyChanged("_alarmtype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _confirmtime {
            get {
                return this._confirmtimeField;
            }
            set {
                if ((object.ReferenceEquals(this._confirmtimeField, value) != true)) {
                    this._confirmtimeField = value;
                    this.RaisePropertyChanged("_confirmtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _createtime {
            get {
                return this._createtimeField;
            }
            set {
                if ((object.ReferenceEquals(this._createtimeField, value) != true)) {
                    this._createtimeField = value;
                    this.RaisePropertyChanged("_createtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _handledetail {
            get {
                return this._handledetailField;
            }
            set {
                if ((object.ReferenceEquals(this._handledetailField, value) != true)) {
                    this._handledetailField = value;
                    this.RaisePropertyChanged("_handledetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _handlerid {
            get {
                return this._handleridField;
            }
            set {
                if ((this._handleridField.Equals(value) != true)) {
                    this._handleridField = value;
                    this.RaisePropertyChanged("_handlerid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _handlestatus {
            get {
                return this._handlestatusField;
            }
            set {
                if ((this._handlestatusField.Equals(value) != true)) {
                    this._handlestatusField = value;
                    this.RaisePropertyChanged("_handlestatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long _operateid {
            get {
                return this._operateidField;
            }
            set {
                if ((this._operateidField.Equals(value) != true)) {
                    this._operateidField = value;
                    this.RaisePropertyChanged("_operateid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _ownerid {
            get {
                return this._owneridField;
            }
            set {
                if ((this._owneridField.Equals(value) != true)) {
                    this._owneridField = value;
                    this.RaisePropertyChanged("_ownerid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _updatetime {
            get {
                return this._updatetimeField;
            }
            set {
                if ((object.ReferenceEquals(this._updatetimeField, value) != true)) {
                    this._updatetimeField = value;
                    this.RaisePropertyChanged("_updatetime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="systemparams", Namespace="http://schemas.datacontract.org/2004/07/Xwsw.Model.NMS")]
    [System.SerializableAttribute()]
    public partial class systemparams : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int _idField;
        
        private string _paramnameField;
        
        private string _paramvalueField;
        
        private string _remarkField;
        
        private int _statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _paramname {
            get {
                return this._paramnameField;
            }
            set {
                if ((object.ReferenceEquals(this._paramnameField, value) != true)) {
                    this._paramnameField = value;
                    this.RaisePropertyChanged("_paramname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _paramvalue {
            get {
                return this._paramvalueField;
            }
            set {
                if ((object.ReferenceEquals(this._paramvalueField, value) != true)) {
                    this._paramvalueField = value;
                    this.RaisePropertyChanged("_paramvalue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _remark {
            get {
                return this._remarkField;
            }
            set {
                if ((object.ReferenceEquals(this._remarkField, value) != true)) {
                    this._remarkField = value;
                    this.RaisePropertyChanged("_remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _status {
            get {
                return this._statusField;
            }
            set {
                if ((this._statusField.Equals(value) != true)) {
                    this._statusField = value;
                    this.RaisePropertyChanged("_status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference_CNmsService.CNmsService")]
    public interface CNmsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddAudiohistory", ReplyAction="http://tempuri.org/CNmsService/AddAudiohistoryResponse")]
        bool AddAudiohistory(string strParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddAudiohistory", ReplyAction="http://tempuri.org/CNmsService/AddAudiohistoryResponse")]
        System.Threading.Tasks.Task<bool> AddAudiohistoryAsync(string strParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateAudiohistory", ReplyAction="http://tempuri.org/CNmsService/UpdateAudiohistoryResponse")]
        bool UpdateAudiohistory(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateAudiohistory", ReplyAction="http://tempuri.org/CNmsService/UpdateAudiohistoryResponse")]
        System.Threading.Tasks.Task<bool> UpdateAudiohistoryAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteAudiohistory", ReplyAction="http://tempuri.org/CNmsService/DeleteAudiohistoryResponse")]
        bool DeleteAudiohistory(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteAudiohistory", ReplyAction="http://tempuri.org/CNmsService/DeleteAudiohistoryResponse")]
        System.Threading.Tasks.Task<bool> DeleteAudiohistoryAsync(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetAudiohistoryList", ReplyAction="http://tempuri.org/CNmsService/GetAudiohistoryListResponse")]
        ConsoleTest.ServiceReference_CNmsService.audiohistory[] GetAudiohistoryList(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetAudiohistoryList", ReplyAction="http://tempuri.org/CNmsService/GetAudiohistoryListResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.audiohistory[]> GetAudiohistoryListAsync(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetAudiohistory", ReplyAction="http://tempuri.org/CNmsService/GetAudiohistoryResponse")]
        ConsoleTest.ServiceReference_CNmsService.audiohistory GetAudiohistory(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetAudiohistory", ReplyAction="http://tempuri.org/CNmsService/GetAudiohistoryResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.audiohistory> GetAudiohistoryAsync(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddGroupinfo", ReplyAction="http://tempuri.org/CNmsService/AddGroupinfoResponse")]
        bool AddGroupinfo(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddGroupinfo", ReplyAction="http://tempuri.org/CNmsService/AddGroupinfoResponse")]
        System.Threading.Tasks.Task<bool> AddGroupinfoAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateGroupinfo", ReplyAction="http://tempuri.org/CNmsService/UpdateGroupinfoResponse")]
        bool UpdateGroupinfo(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateGroupinfo", ReplyAction="http://tempuri.org/CNmsService/UpdateGroupinfoResponse")]
        System.Threading.Tasks.Task<bool> UpdateGroupinfoAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteGroupinfo", ReplyAction="http://tempuri.org/CNmsService/DeleteGroupinfoResponse")]
        bool DeleteGroupinfo(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteGroupinfo", ReplyAction="http://tempuri.org/CNmsService/DeleteGroupinfoResponse")]
        System.Threading.Tasks.Task<bool> DeleteGroupinfoAsync(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetGroupinfoList", ReplyAction="http://tempuri.org/CNmsService/GetGroupinfoListResponse")]
        ConsoleTest.ServiceReference_CNmsService.groupinfo[] GetGroupinfoList(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetGroupinfoList", ReplyAction="http://tempuri.org/CNmsService/GetGroupinfoListResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.groupinfo[]> GetGroupinfoListAsync(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetGroupinfo", ReplyAction="http://tempuri.org/CNmsService/GetGroupinfoResponse")]
        ConsoleTest.ServiceReference_CNmsService.groupinfo GetGroupinfo(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetGroupinfo", ReplyAction="http://tempuri.org/CNmsService/GetGroupinfoResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.groupinfo> GetGroupinfoAsync(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddGroupterminal", ReplyAction="http://tempuri.org/CNmsService/AddGroupterminalResponse")]
        bool AddGroupterminal(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddGroupterminal", ReplyAction="http://tempuri.org/CNmsService/AddGroupterminalResponse")]
        System.Threading.Tasks.Task<bool> AddGroupterminalAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateGroupterminal", ReplyAction="http://tempuri.org/CNmsService/UpdateGroupterminalResponse")]
        bool UpdateGroupterminal(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateGroupterminal", ReplyAction="http://tempuri.org/CNmsService/UpdateGroupterminalResponse")]
        System.Threading.Tasks.Task<bool> UpdateGroupterminalAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteGroupterminal", ReplyAction="http://tempuri.org/CNmsService/DeleteGroupterminalResponse")]
        bool DeleteGroupterminal(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteGroupterminal", ReplyAction="http://tempuri.org/CNmsService/DeleteGroupterminalResponse")]
        System.Threading.Tasks.Task<bool> DeleteGroupterminalAsync(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetGroupterminalList", ReplyAction="http://tempuri.org/CNmsService/GetGroupterminalListResponse")]
        ConsoleTest.ServiceReference_CNmsService.groupterminal[] GetGroupterminalList(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetGroupterminalList", ReplyAction="http://tempuri.org/CNmsService/GetGroupterminalListResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.groupterminal[]> GetGroupterminalListAsync(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetGroupterminal", ReplyAction="http://tempuri.org/CNmsService/GetGroupterminalResponse")]
        ConsoleTest.ServiceReference_CNmsService.groupterminal GetGroupterminal(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetGroupterminal", ReplyAction="http://tempuri.org/CNmsService/GetGroupterminalResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.groupterminal> GetGroupterminalAsync(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UserLogin", ReplyAction="http://tempuri.org/CNmsService/UserLoginResponse")]
        bool UserLogin(string strParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UserLogin", ReplyAction="http://tempuri.org/CNmsService/UserLoginResponse")]
        System.Threading.Tasks.Task<bool> UserLoginAsync(string strParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UserLoginE", ReplyAction="http://tempuri.org/CNmsService/UserLoginEResponse")]
        string UserLoginE(string strParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UserLoginE", ReplyAction="http://tempuri.org/CNmsService/UserLoginEResponse")]
        System.Threading.Tasks.Task<string> UserLoginEAsync(string strParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/ModifyUserPwd", ReplyAction="http://tempuri.org/CNmsService/ModifyUserPwdResponse")]
        bool ModifyUserPwd(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/ModifyUserPwd", ReplyAction="http://tempuri.org/CNmsService/ModifyUserPwdResponse")]
        System.Threading.Tasks.Task<bool> ModifyUserPwdAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddUserinfo", ReplyAction="http://tempuri.org/CNmsService/AddUserinfoResponse")]
        bool AddUserinfo(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddUserinfo", ReplyAction="http://tempuri.org/CNmsService/AddUserinfoResponse")]
        System.Threading.Tasks.Task<bool> AddUserinfoAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddUserinfoModel", ReplyAction="http://tempuri.org/CNmsService/AddUserinfoModelResponse")]
        bool AddUserinfoModel(ConsoleTest.ServiceReference_CNmsService.userinfo ui, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddUserinfoModel", ReplyAction="http://tempuri.org/CNmsService/AddUserinfoModelResponse")]
        System.Threading.Tasks.Task<bool> AddUserinfoModelAsync(ConsoleTest.ServiceReference_CNmsService.userinfo ui, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateUserinfo", ReplyAction="http://tempuri.org/CNmsService/UpdateUserinfoResponse")]
        bool UpdateUserinfo(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateUserinfo", ReplyAction="http://tempuri.org/CNmsService/UpdateUserinfoResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserinfoAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateUserinfoModel", ReplyAction="http://tempuri.org/CNmsService/UpdateUserinfoModelResponse")]
        bool UpdateUserinfoModel(ConsoleTest.ServiceReference_CNmsService.userinfo ui, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateUserinfoModel", ReplyAction="http://tempuri.org/CNmsService/UpdateUserinfoModelResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserinfoModelAsync(ConsoleTest.ServiceReference_CNmsService.userinfo ui, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteUserinfo", ReplyAction="http://tempuri.org/CNmsService/DeleteUserinfoResponse")]
        bool DeleteUserinfo(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteUserinfo", ReplyAction="http://tempuri.org/CNmsService/DeleteUserinfoResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserinfoAsync(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetUserinfoList", ReplyAction="http://tempuri.org/CNmsService/GetUserinfoListResponse")]
        System.Data.DataSet GetUserinfoList(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetUserinfoList", ReplyAction="http://tempuri.org/CNmsService/GetUserinfoListResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUserinfoListAsync(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetUserinfoListModel", ReplyAction="http://tempuri.org/CNmsService/GetUserinfoListModelResponse")]
        ConsoleTest.ServiceReference_CNmsService.userinfo[] GetUserinfoListModel(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetUserinfoListModel", ReplyAction="http://tempuri.org/CNmsService/GetUserinfoListModelResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.userinfo[]> GetUserinfoListModelAsync(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetUserinfo", ReplyAction="http://tempuri.org/CNmsService/GetUserinfoResponse")]
        ConsoleTest.ServiceReference_CNmsService.ResInfoModel GetUserinfo(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetUserinfo", ReplyAction="http://tempuri.org/CNmsService/GetUserinfoResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.ResInfoModel> GetUserinfoAsync(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetUserinfoModel", ReplyAction="http://tempuri.org/CNmsService/GetUserinfoModelResponse")]
        ConsoleTest.ServiceReference_CNmsService.userinfo GetUserinfoModel(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetUserinfoModel", ReplyAction="http://tempuri.org/CNmsService/GetUserinfoModelResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.userinfo> GetUserinfoModelAsync(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddUserevent", ReplyAction="http://tempuri.org/CNmsService/AddUsereventResponse")]
        bool AddUserevent(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddUserevent", ReplyAction="http://tempuri.org/CNmsService/AddUsereventResponse")]
        System.Threading.Tasks.Task<bool> AddUsereventAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateUserevent", ReplyAction="http://tempuri.org/CNmsService/UpdateUsereventResponse")]
        bool UpdateUserevent(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateUserevent", ReplyAction="http://tempuri.org/CNmsService/UpdateUsereventResponse")]
        System.Threading.Tasks.Task<bool> UpdateUsereventAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteUserevent", ReplyAction="http://tempuri.org/CNmsService/DeleteUsereventResponse")]
        bool DeleteUserevent(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteUserevent", ReplyAction="http://tempuri.org/CNmsService/DeleteUsereventResponse")]
        System.Threading.Tasks.Task<bool> DeleteUsereventAsync(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetUsereventList", ReplyAction="http://tempuri.org/CNmsService/GetUsereventListResponse")]
        ConsoleTest.ServiceReference_CNmsService.userevent[] GetUsereventList(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetUsereventList", ReplyAction="http://tempuri.org/CNmsService/GetUsereventListResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.userevent[]> GetUsereventListAsync(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetUserevent", ReplyAction="http://tempuri.org/CNmsService/GetUsereventResponse")]
        ConsoleTest.ServiceReference_CNmsService.userevent GetUserevent(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetUserevent", ReplyAction="http://tempuri.org/CNmsService/GetUsereventResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.userevent> GetUsereventAsync(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddTerminalinfo", ReplyAction="http://tempuri.org/CNmsService/AddTerminalinfoResponse")]
        bool AddTerminalinfo(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddTerminalinfo", ReplyAction="http://tempuri.org/CNmsService/AddTerminalinfoResponse")]
        System.Threading.Tasks.Task<bool> AddTerminalinfoAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateTerminalinfo", ReplyAction="http://tempuri.org/CNmsService/UpdateTerminalinfoResponse")]
        bool UpdateTerminalinfo(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateTerminalinfo", ReplyAction="http://tempuri.org/CNmsService/UpdateTerminalinfoResponse")]
        System.Threading.Tasks.Task<bool> UpdateTerminalinfoAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteTerminalinfo", ReplyAction="http://tempuri.org/CNmsService/DeleteTerminalinfoResponse")]
        bool DeleteTerminalinfo(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteTerminalinfo", ReplyAction="http://tempuri.org/CNmsService/DeleteTerminalinfoResponse")]
        System.Threading.Tasks.Task<bool> DeleteTerminalinfoAsync(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetTerminalinfoList", ReplyAction="http://tempuri.org/CNmsService/GetTerminalinfoListResponse")]
        ConsoleTest.ServiceReference_CNmsService.terminalinfo[] GetTerminalinfoList(string where);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetTerminalinfoList", ReplyAction="http://tempuri.org/CNmsService/GetTerminalinfoListResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.terminalinfo[]> GetTerminalinfoListAsync(string where);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetTerminalinfo", ReplyAction="http://tempuri.org/CNmsService/GetTerminalinfoResponse")]
        ConsoleTest.ServiceReference_CNmsService.terminalinfo GetTerminalinfo(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetTerminalinfo", ReplyAction="http://tempuri.org/CNmsService/GetTerminalinfoResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.terminalinfo> GetTerminalinfoAsync(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddTerminaluser", ReplyAction="http://tempuri.org/CNmsService/AddTerminaluserResponse")]
        bool AddTerminaluser(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddTerminaluser", ReplyAction="http://tempuri.org/CNmsService/AddTerminaluserResponse")]
        System.Threading.Tasks.Task<bool> AddTerminaluserAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateTerminaluser", ReplyAction="http://tempuri.org/CNmsService/UpdateTerminaluserResponse")]
        bool UpdateTerminaluser(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateTerminaluser", ReplyAction="http://tempuri.org/CNmsService/UpdateTerminaluserResponse")]
        System.Threading.Tasks.Task<bool> UpdateTerminaluserAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteTerminaluser", ReplyAction="http://tempuri.org/CNmsService/DeleteTerminaluserResponse")]
        bool DeleteTerminaluser(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteTerminaluser", ReplyAction="http://tempuri.org/CNmsService/DeleteTerminaluserResponse")]
        System.Threading.Tasks.Task<bool> DeleteTerminaluserAsync(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetTerminaluserList", ReplyAction="http://tempuri.org/CNmsService/GetTerminaluserListResponse")]
        ConsoleTest.ServiceReference_CNmsService.terminaluser[] GetTerminaluserList(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetTerminaluserList", ReplyAction="http://tempuri.org/CNmsService/GetTerminaluserListResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.terminaluser[]> GetTerminaluserListAsync(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetTerminaluser", ReplyAction="http://tempuri.org/CNmsService/GetTerminaluserResponse")]
        ConsoleTest.ServiceReference_CNmsService.terminaluser GetTerminaluser(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetTerminaluser", ReplyAction="http://tempuri.org/CNmsService/GetTerminaluserResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.terminaluser> GetTerminaluserAsync(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddTerminalevent", ReplyAction="http://tempuri.org/CNmsService/AddTerminaleventResponse")]
        bool AddTerminalevent(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddTerminalevent", ReplyAction="http://tempuri.org/CNmsService/AddTerminaleventResponse")]
        System.Threading.Tasks.Task<bool> AddTerminaleventAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateTerminalevent", ReplyAction="http://tempuri.org/CNmsService/UpdateTerminaleventResponse")]
        bool UpdateTerminalevent(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateTerminalevent", ReplyAction="http://tempuri.org/CNmsService/UpdateTerminaleventResponse")]
        System.Threading.Tasks.Task<bool> UpdateTerminaleventAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteTerminalevent", ReplyAction="http://tempuri.org/CNmsService/DeleteTerminaleventResponse")]
        bool DeleteTerminalevent(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteTerminalevent", ReplyAction="http://tempuri.org/CNmsService/DeleteTerminaleventResponse")]
        System.Threading.Tasks.Task<bool> DeleteTerminaleventAsync(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetTerminaleventList", ReplyAction="http://tempuri.org/CNmsService/GetTerminaleventListResponse")]
        ConsoleTest.ServiceReference_CNmsService.terminalevent[] GetTerminaleventList(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetTerminaleventList", ReplyAction="http://tempuri.org/CNmsService/GetTerminaleventListResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.terminalevent[]> GetTerminaleventListAsync(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetTerminalevent", ReplyAction="http://tempuri.org/CNmsService/GetTerminaleventResponse")]
        ConsoleTest.ServiceReference_CNmsService.terminalevent GetTerminalevent(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetTerminalevent", ReplyAction="http://tempuri.org/CNmsService/GetTerminaleventResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.terminalevent> GetTerminaleventAsync(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddCurrentAlarm", ReplyAction="http://tempuri.org/CNmsService/AddCurrentAlarmResponse")]
        bool AddCurrentAlarm(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddCurrentAlarm", ReplyAction="http://tempuri.org/CNmsService/AddCurrentAlarmResponse")]
        System.Threading.Tasks.Task<bool> AddCurrentAlarmAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateCurrentAlarm", ReplyAction="http://tempuri.org/CNmsService/UpdateCurrentAlarmResponse")]
        bool UpdateCurrentAlarm(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateCurrentAlarm", ReplyAction="http://tempuri.org/CNmsService/UpdateCurrentAlarmResponse")]
        System.Threading.Tasks.Task<bool> UpdateCurrentAlarmAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteCurrentAlarm", ReplyAction="http://tempuri.org/CNmsService/DeleteCurrentAlarmResponse")]
        bool DeleteCurrentAlarm(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteCurrentAlarm", ReplyAction="http://tempuri.org/CNmsService/DeleteCurrentAlarmResponse")]
        System.Threading.Tasks.Task<bool> DeleteCurrentAlarmAsync(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetCurrentAlarmList", ReplyAction="http://tempuri.org/CNmsService/GetCurrentAlarmListResponse")]
        ConsoleTest.ServiceReference_CNmsService.currentalarm[] GetCurrentAlarmList(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetCurrentAlarmList", ReplyAction="http://tempuri.org/CNmsService/GetCurrentAlarmListResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.currentalarm[]> GetCurrentAlarmListAsync(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetCurrentAlarm", ReplyAction="http://tempuri.org/CNmsService/GetCurrentAlarmResponse")]
        ConsoleTest.ServiceReference_CNmsService.currentalarm GetCurrentAlarm(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetCurrentAlarm", ReplyAction="http://tempuri.org/CNmsService/GetCurrentAlarmResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.currentalarm> GetCurrentAlarmAsync(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddHistoryAlarm", ReplyAction="http://tempuri.org/CNmsService/AddHistoryAlarmResponse")]
        bool AddHistoryAlarm(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddHistoryAlarm", ReplyAction="http://tempuri.org/CNmsService/AddHistoryAlarmResponse")]
        System.Threading.Tasks.Task<bool> AddHistoryAlarmAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateHistoryAlarm", ReplyAction="http://tempuri.org/CNmsService/UpdateHistoryAlarmResponse")]
        bool UpdateHistoryAlarm(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateHistoryAlarm", ReplyAction="http://tempuri.org/CNmsService/UpdateHistoryAlarmResponse")]
        System.Threading.Tasks.Task<bool> UpdateHistoryAlarmAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteHistoryAlarm", ReplyAction="http://tempuri.org/CNmsService/DeleteHistoryAlarmResponse")]
        bool DeleteHistoryAlarm(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteHistoryAlarm", ReplyAction="http://tempuri.org/CNmsService/DeleteHistoryAlarmResponse")]
        System.Threading.Tasks.Task<bool> DeleteHistoryAlarmAsync(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetHistoryAlarmList", ReplyAction="http://tempuri.org/CNmsService/GetHistoryAlarmListResponse")]
        ConsoleTest.ServiceReference_CNmsService.historyalarm[] GetHistoryAlarmList(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetHistoryAlarmList", ReplyAction="http://tempuri.org/CNmsService/GetHistoryAlarmListResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.historyalarm[]> GetHistoryAlarmListAsync(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetHistoryAlarm", ReplyAction="http://tempuri.org/CNmsService/GetHistoryAlarmResponse")]
        ConsoleTest.ServiceReference_CNmsService.historyalarm GetHistoryAlarm(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetHistoryAlarm", ReplyAction="http://tempuri.org/CNmsService/GetHistoryAlarmResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.historyalarm> GetHistoryAlarmAsync(long id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddSystemparams", ReplyAction="http://tempuri.org/CNmsService/AddSystemparamsResponse")]
        bool AddSystemparams(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/AddSystemparams", ReplyAction="http://tempuri.org/CNmsService/AddSystemparamsResponse")]
        System.Threading.Tasks.Task<bool> AddSystemparamsAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateSystemparams", ReplyAction="http://tempuri.org/CNmsService/UpdateSystemparamsResponse")]
        bool UpdateSystemparams(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpdateSystemparams", ReplyAction="http://tempuri.org/CNmsService/UpdateSystemparamsResponse")]
        System.Threading.Tasks.Task<bool> UpdateSystemparamsAsync(string strParams, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteSystemparams", ReplyAction="http://tempuri.org/CNmsService/DeleteSystemparamsResponse")]
        bool DeleteSystemparams(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DeleteSystemparams", ReplyAction="http://tempuri.org/CNmsService/DeleteSystemparamsResponse")]
        System.Threading.Tasks.Task<bool> DeleteSystemparamsAsync(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetSystemparamsList", ReplyAction="http://tempuri.org/CNmsService/GetSystemparamsListResponse")]
        ConsoleTest.ServiceReference_CNmsService.systemparams[] GetSystemparamsList(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetSystemparamsList", ReplyAction="http://tempuri.org/CNmsService/GetSystemparamsListResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.systemparams[]> GetSystemparamsListAsync(string where, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetSystemparams", ReplyAction="http://tempuri.org/CNmsService/GetSystemparamsResponse")]
        ConsoleTest.ServiceReference_CNmsService.systemparams GetSystemparams(int id, string strAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/GetSystemparams", ReplyAction="http://tempuri.org/CNmsService/GetSystemparamsResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.systemparams> GetSystemparamsAsync(int id, string strAuth);
        
        // CODEGEN: 消息 UpFile 的包装名称(UpFile)以后生成的消息协定与默认值(UpLoadFile)不匹配
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpLoadFile", ReplyAction="http://tempuri.org/CNmsService/UpLoadFileResponse")]
        ConsoleTest.ServiceReference_CNmsService.UpFileResult UpLoadFile(ConsoleTest.ServiceReference_CNmsService.UpFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/UpLoadFile", ReplyAction="http://tempuri.org/CNmsService/UpLoadFileResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.UpFileResult> UpLoadFileAsync(ConsoleTest.ServiceReference_CNmsService.UpFile request);
        
        // CODEGEN: 消息 DownFile 的包装名称(DownFile)以后生成的消息协定与默认值(DownLoadFile)不匹配
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DownLoadFile", ReplyAction="http://tempuri.org/CNmsService/DownLoadFileResponse")]
        ConsoleTest.ServiceReference_CNmsService.DownFileResult DownLoadFile(ConsoleTest.ServiceReference_CNmsService.DownFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNmsService/DownLoadFile", ReplyAction="http://tempuri.org/CNmsService/DownLoadFileResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.DownFileResult> DownLoadFileAsync(ConsoleTest.ServiceReference_CNmsService.DownFile request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpFile {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long FileSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileStream;
        
        public UpFile() {
        }
        
        public UpFile(string FileName, long FileSize, System.IO.Stream FileStream) {
            this.FileName = FileName;
            this.FileSize = FileSize;
            this.FileStream = FileStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpFileResult", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpFileResult {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public bool IsSuccess;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Message;
        
        public UpFileResult() {
        }
        
        public UpFileResult(bool IsSuccess, string Message) {
            this.IsSuccess = IsSuccess;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownFile {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long FileID;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string StrAuth;
        
        public DownFile() {
        }
        
        public DownFile(long FileID, string FileName, string StrAuth) {
            this.FileID = FileID;
            this.FileName = FileName;
            this.StrAuth = StrAuth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownFileResult", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownFileResult {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long FileSize;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public bool IsSuccess;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileStream;
        
        public DownFileResult() {
        }
        
        public DownFileResult(long FileSize, bool IsSuccess, string Message, System.IO.Stream FileStream) {
            this.FileSize = FileSize;
            this.IsSuccess = IsSuccess;
            this.Message = Message;
            this.FileStream = FileStream;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CNmsServiceChannel : ConsoleTest.ServiceReference_CNmsService.CNmsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CNmsServiceClient : System.ServiceModel.ClientBase<ConsoleTest.ServiceReference_CNmsService.CNmsService>, ConsoleTest.ServiceReference_CNmsService.CNmsService {
        
        public CNmsServiceClient() {
        }
        
        public CNmsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CNmsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CNmsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CNmsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddAudiohistory(string strParams) {
            return base.Channel.AddAudiohistory(strParams);
        }
        
        public System.Threading.Tasks.Task<bool> AddAudiohistoryAsync(string strParams) {
            return base.Channel.AddAudiohistoryAsync(strParams);
        }
        
        public bool UpdateAudiohistory(string strParams, string strAuth) {
            return base.Channel.UpdateAudiohistory(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAudiohistoryAsync(string strParams, string strAuth) {
            return base.Channel.UpdateAudiohistoryAsync(strParams, strAuth);
        }
        
        public bool DeleteAudiohistory(long id, string strAuth) {
            return base.Channel.DeleteAudiohistory(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAudiohistoryAsync(long id, string strAuth) {
            return base.Channel.DeleteAudiohistoryAsync(id, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.audiohistory[] GetAudiohistoryList(string where, string strAuth) {
            return base.Channel.GetAudiohistoryList(where, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.audiohistory[]> GetAudiohistoryListAsync(string where, string strAuth) {
            return base.Channel.GetAudiohistoryListAsync(where, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.audiohistory GetAudiohistory(long id, string strAuth) {
            return base.Channel.GetAudiohistory(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.audiohistory> GetAudiohistoryAsync(long id, string strAuth) {
            return base.Channel.GetAudiohistoryAsync(id, strAuth);
        }
        
        public bool AddGroupinfo(string strParams, string strAuth) {
            return base.Channel.AddGroupinfo(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> AddGroupinfoAsync(string strParams, string strAuth) {
            return base.Channel.AddGroupinfoAsync(strParams, strAuth);
        }
        
        public bool UpdateGroupinfo(string strParams, string strAuth) {
            return base.Channel.UpdateGroupinfo(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateGroupinfoAsync(string strParams, string strAuth) {
            return base.Channel.UpdateGroupinfoAsync(strParams, strAuth);
        }
        
        public bool DeleteGroupinfo(int id, string strAuth) {
            return base.Channel.DeleteGroupinfo(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGroupinfoAsync(int id, string strAuth) {
            return base.Channel.DeleteGroupinfoAsync(id, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.groupinfo[] GetGroupinfoList(string where, string strAuth) {
            return base.Channel.GetGroupinfoList(where, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.groupinfo[]> GetGroupinfoListAsync(string where, string strAuth) {
            return base.Channel.GetGroupinfoListAsync(where, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.groupinfo GetGroupinfo(int id, string strAuth) {
            return base.Channel.GetGroupinfo(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.groupinfo> GetGroupinfoAsync(int id, string strAuth) {
            return base.Channel.GetGroupinfoAsync(id, strAuth);
        }
        
        public bool AddGroupterminal(string strParams, string strAuth) {
            return base.Channel.AddGroupterminal(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> AddGroupterminalAsync(string strParams, string strAuth) {
            return base.Channel.AddGroupterminalAsync(strParams, strAuth);
        }
        
        public bool UpdateGroupterminal(string strParams, string strAuth) {
            return base.Channel.UpdateGroupterminal(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateGroupterminalAsync(string strParams, string strAuth) {
            return base.Channel.UpdateGroupterminalAsync(strParams, strAuth);
        }
        
        public bool DeleteGroupterminal(int id, string strAuth) {
            return base.Channel.DeleteGroupterminal(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGroupterminalAsync(int id, string strAuth) {
            return base.Channel.DeleteGroupterminalAsync(id, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.groupterminal[] GetGroupterminalList(string where, string strAuth) {
            return base.Channel.GetGroupterminalList(where, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.groupterminal[]> GetGroupterminalListAsync(string where, string strAuth) {
            return base.Channel.GetGroupterminalListAsync(where, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.groupterminal GetGroupterminal(int id, string strAuth) {
            return base.Channel.GetGroupterminal(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.groupterminal> GetGroupterminalAsync(int id, string strAuth) {
            return base.Channel.GetGroupterminalAsync(id, strAuth);
        }
        
        public bool UserLogin(string strParams) {
            return base.Channel.UserLogin(strParams);
        }
        
        public System.Threading.Tasks.Task<bool> UserLoginAsync(string strParams) {
            return base.Channel.UserLoginAsync(strParams);
        }
        
        public string UserLoginE(string strParams) {
            return base.Channel.UserLoginE(strParams);
        }
        
        public System.Threading.Tasks.Task<string> UserLoginEAsync(string strParams) {
            return base.Channel.UserLoginEAsync(strParams);
        }
        
        public bool ModifyUserPwd(string strParams, string strAuth) {
            return base.Channel.ModifyUserPwd(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> ModifyUserPwdAsync(string strParams, string strAuth) {
            return base.Channel.ModifyUserPwdAsync(strParams, strAuth);
        }
        
        public bool AddUserinfo(string strParams, string strAuth) {
            return base.Channel.AddUserinfo(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserinfoAsync(string strParams, string strAuth) {
            return base.Channel.AddUserinfoAsync(strParams, strAuth);
        }
        
        public bool AddUserinfoModel(ConsoleTest.ServiceReference_CNmsService.userinfo ui, string strAuth) {
            return base.Channel.AddUserinfoModel(ui, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserinfoModelAsync(ConsoleTest.ServiceReference_CNmsService.userinfo ui, string strAuth) {
            return base.Channel.AddUserinfoModelAsync(ui, strAuth);
        }
        
        public bool UpdateUserinfo(string strParams, string strAuth) {
            return base.Channel.UpdateUserinfo(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserinfoAsync(string strParams, string strAuth) {
            return base.Channel.UpdateUserinfoAsync(strParams, strAuth);
        }
        
        public bool UpdateUserinfoModel(ConsoleTest.ServiceReference_CNmsService.userinfo ui, string strAuth) {
            return base.Channel.UpdateUserinfoModel(ui, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserinfoModelAsync(ConsoleTest.ServiceReference_CNmsService.userinfo ui, string strAuth) {
            return base.Channel.UpdateUserinfoModelAsync(ui, strAuth);
        }
        
        public bool DeleteUserinfo(int id, string strAuth) {
            return base.Channel.DeleteUserinfo(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserinfoAsync(int id, string strAuth) {
            return base.Channel.DeleteUserinfoAsync(id, strAuth);
        }
        
        public System.Data.DataSet GetUserinfoList(string where, string strAuth) {
            return base.Channel.GetUserinfoList(where, strAuth);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUserinfoListAsync(string where, string strAuth) {
            return base.Channel.GetUserinfoListAsync(where, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.userinfo[] GetUserinfoListModel(string where, string strAuth) {
            return base.Channel.GetUserinfoListModel(where, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.userinfo[]> GetUserinfoListModelAsync(string where, string strAuth) {
            return base.Channel.GetUserinfoListModelAsync(where, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.ResInfoModel GetUserinfo(int id, string strAuth) {
            return base.Channel.GetUserinfo(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.ResInfoModel> GetUserinfoAsync(int id, string strAuth) {
            return base.Channel.GetUserinfoAsync(id, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.userinfo GetUserinfoModel(int id, string strAuth) {
            return base.Channel.GetUserinfoModel(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.userinfo> GetUserinfoModelAsync(int id, string strAuth) {
            return base.Channel.GetUserinfoModelAsync(id, strAuth);
        }
        
        public bool AddUserevent(string strParams, string strAuth) {
            return base.Channel.AddUserevent(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> AddUsereventAsync(string strParams, string strAuth) {
            return base.Channel.AddUsereventAsync(strParams, strAuth);
        }
        
        public bool UpdateUserevent(string strParams, string strAuth) {
            return base.Channel.UpdateUserevent(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUsereventAsync(string strParams, string strAuth) {
            return base.Channel.UpdateUsereventAsync(strParams, strAuth);
        }
        
        public bool DeleteUserevent(long id, string strAuth) {
            return base.Channel.DeleteUserevent(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUsereventAsync(long id, string strAuth) {
            return base.Channel.DeleteUsereventAsync(id, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.userevent[] GetUsereventList(string where, string strAuth) {
            return base.Channel.GetUsereventList(where, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.userevent[]> GetUsereventListAsync(string where, string strAuth) {
            return base.Channel.GetUsereventListAsync(where, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.userevent GetUserevent(long id, string strAuth) {
            return base.Channel.GetUserevent(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.userevent> GetUsereventAsync(long id, string strAuth) {
            return base.Channel.GetUsereventAsync(id, strAuth);
        }
        
        public bool AddTerminalinfo(string strParams, string strAuth) {
            return base.Channel.AddTerminalinfo(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> AddTerminalinfoAsync(string strParams, string strAuth) {
            return base.Channel.AddTerminalinfoAsync(strParams, strAuth);
        }
        
        public bool UpdateTerminalinfo(string strParams, string strAuth) {
            return base.Channel.UpdateTerminalinfo(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTerminalinfoAsync(string strParams, string strAuth) {
            return base.Channel.UpdateTerminalinfoAsync(strParams, strAuth);
        }
        
        public bool DeleteTerminalinfo(int id, string strAuth) {
            return base.Channel.DeleteTerminalinfo(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTerminalinfoAsync(int id, string strAuth) {
            return base.Channel.DeleteTerminalinfoAsync(id, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.terminalinfo[] GetTerminalinfoList(string where) {
            return base.Channel.GetTerminalinfoList(where);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.terminalinfo[]> GetTerminalinfoListAsync(string where) {
            return base.Channel.GetTerminalinfoListAsync(where);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.terminalinfo GetTerminalinfo(int id, string strAuth) {
            return base.Channel.GetTerminalinfo(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.terminalinfo> GetTerminalinfoAsync(int id, string strAuth) {
            return base.Channel.GetTerminalinfoAsync(id, strAuth);
        }
        
        public bool AddTerminaluser(string strParams, string strAuth) {
            return base.Channel.AddTerminaluser(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> AddTerminaluserAsync(string strParams, string strAuth) {
            return base.Channel.AddTerminaluserAsync(strParams, strAuth);
        }
        
        public bool UpdateTerminaluser(string strParams, string strAuth) {
            return base.Channel.UpdateTerminaluser(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTerminaluserAsync(string strParams, string strAuth) {
            return base.Channel.UpdateTerminaluserAsync(strParams, strAuth);
        }
        
        public bool DeleteTerminaluser(int id, string strAuth) {
            return base.Channel.DeleteTerminaluser(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTerminaluserAsync(int id, string strAuth) {
            return base.Channel.DeleteTerminaluserAsync(id, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.terminaluser[] GetTerminaluserList(string where, string strAuth) {
            return base.Channel.GetTerminaluserList(where, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.terminaluser[]> GetTerminaluserListAsync(string where, string strAuth) {
            return base.Channel.GetTerminaluserListAsync(where, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.terminaluser GetTerminaluser(int id, string strAuth) {
            return base.Channel.GetTerminaluser(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.terminaluser> GetTerminaluserAsync(int id, string strAuth) {
            return base.Channel.GetTerminaluserAsync(id, strAuth);
        }
        
        public bool AddTerminalevent(string strParams, string strAuth) {
            return base.Channel.AddTerminalevent(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> AddTerminaleventAsync(string strParams, string strAuth) {
            return base.Channel.AddTerminaleventAsync(strParams, strAuth);
        }
        
        public bool UpdateTerminalevent(string strParams, string strAuth) {
            return base.Channel.UpdateTerminalevent(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTerminaleventAsync(string strParams, string strAuth) {
            return base.Channel.UpdateTerminaleventAsync(strParams, strAuth);
        }
        
        public bool DeleteTerminalevent(long id, string strAuth) {
            return base.Channel.DeleteTerminalevent(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTerminaleventAsync(long id, string strAuth) {
            return base.Channel.DeleteTerminaleventAsync(id, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.terminalevent[] GetTerminaleventList(string where, string strAuth) {
            return base.Channel.GetTerminaleventList(where, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.terminalevent[]> GetTerminaleventListAsync(string where, string strAuth) {
            return base.Channel.GetTerminaleventListAsync(where, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.terminalevent GetTerminalevent(long id, string strAuth) {
            return base.Channel.GetTerminalevent(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.terminalevent> GetTerminaleventAsync(long id, string strAuth) {
            return base.Channel.GetTerminaleventAsync(id, strAuth);
        }
        
        public bool AddCurrentAlarm(string strParams, string strAuth) {
            return base.Channel.AddCurrentAlarm(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> AddCurrentAlarmAsync(string strParams, string strAuth) {
            return base.Channel.AddCurrentAlarmAsync(strParams, strAuth);
        }
        
        public bool UpdateCurrentAlarm(string strParams, string strAuth) {
            return base.Channel.UpdateCurrentAlarm(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCurrentAlarmAsync(string strParams, string strAuth) {
            return base.Channel.UpdateCurrentAlarmAsync(strParams, strAuth);
        }
        
        public bool DeleteCurrentAlarm(long id, string strAuth) {
            return base.Channel.DeleteCurrentAlarm(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCurrentAlarmAsync(long id, string strAuth) {
            return base.Channel.DeleteCurrentAlarmAsync(id, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.currentalarm[] GetCurrentAlarmList(string where, string strAuth) {
            return base.Channel.GetCurrentAlarmList(where, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.currentalarm[]> GetCurrentAlarmListAsync(string where, string strAuth) {
            return base.Channel.GetCurrentAlarmListAsync(where, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.currentalarm GetCurrentAlarm(long id, string strAuth) {
            return base.Channel.GetCurrentAlarm(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.currentalarm> GetCurrentAlarmAsync(long id, string strAuth) {
            return base.Channel.GetCurrentAlarmAsync(id, strAuth);
        }
        
        public bool AddHistoryAlarm(string strParams, string strAuth) {
            return base.Channel.AddHistoryAlarm(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> AddHistoryAlarmAsync(string strParams, string strAuth) {
            return base.Channel.AddHistoryAlarmAsync(strParams, strAuth);
        }
        
        public bool UpdateHistoryAlarm(string strParams, string strAuth) {
            return base.Channel.UpdateHistoryAlarm(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateHistoryAlarmAsync(string strParams, string strAuth) {
            return base.Channel.UpdateHistoryAlarmAsync(strParams, strAuth);
        }
        
        public bool DeleteHistoryAlarm(long id, string strAuth) {
            return base.Channel.DeleteHistoryAlarm(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteHistoryAlarmAsync(long id, string strAuth) {
            return base.Channel.DeleteHistoryAlarmAsync(id, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.historyalarm[] GetHistoryAlarmList(string where, string strAuth) {
            return base.Channel.GetHistoryAlarmList(where, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.historyalarm[]> GetHistoryAlarmListAsync(string where, string strAuth) {
            return base.Channel.GetHistoryAlarmListAsync(where, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.historyalarm GetHistoryAlarm(long id, string strAuth) {
            return base.Channel.GetHistoryAlarm(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.historyalarm> GetHistoryAlarmAsync(long id, string strAuth) {
            return base.Channel.GetHistoryAlarmAsync(id, strAuth);
        }
        
        public bool AddSystemparams(string strParams, string strAuth) {
            return base.Channel.AddSystemparams(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> AddSystemparamsAsync(string strParams, string strAuth) {
            return base.Channel.AddSystemparamsAsync(strParams, strAuth);
        }
        
        public bool UpdateSystemparams(string strParams, string strAuth) {
            return base.Channel.UpdateSystemparams(strParams, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSystemparamsAsync(string strParams, string strAuth) {
            return base.Channel.UpdateSystemparamsAsync(strParams, strAuth);
        }
        
        public bool DeleteSystemparams(int id, string strAuth) {
            return base.Channel.DeleteSystemparams(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSystemparamsAsync(int id, string strAuth) {
            return base.Channel.DeleteSystemparamsAsync(id, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.systemparams[] GetSystemparamsList(string where, string strAuth) {
            return base.Channel.GetSystemparamsList(where, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.systemparams[]> GetSystemparamsListAsync(string where, string strAuth) {
            return base.Channel.GetSystemparamsListAsync(where, strAuth);
        }
        
        public ConsoleTest.ServiceReference_CNmsService.systemparams GetSystemparams(int id, string strAuth) {
            return base.Channel.GetSystemparams(id, strAuth);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.systemparams> GetSystemparamsAsync(int id, string strAuth) {
            return base.Channel.GetSystemparamsAsync(id, strAuth);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConsoleTest.ServiceReference_CNmsService.UpFileResult ConsoleTest.ServiceReference_CNmsService.CNmsService.UpLoadFile(ConsoleTest.ServiceReference_CNmsService.UpFile request) {
            return base.Channel.UpLoadFile(request);
        }
        
        public bool UpLoadFile(string FileName, long FileSize, System.IO.Stream FileStream, out string Message) {
            ConsoleTest.ServiceReference_CNmsService.UpFile inValue = new ConsoleTest.ServiceReference_CNmsService.UpFile();
            inValue.FileName = FileName;
            inValue.FileSize = FileSize;
            inValue.FileStream = FileStream;
            ConsoleTest.ServiceReference_CNmsService.UpFileResult retVal = ((ConsoleTest.ServiceReference_CNmsService.CNmsService)(this)).UpLoadFile(inValue);
            Message = retVal.Message;
            return retVal.IsSuccess;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.UpFileResult> ConsoleTest.ServiceReference_CNmsService.CNmsService.UpLoadFileAsync(ConsoleTest.ServiceReference_CNmsService.UpFile request) {
            return base.Channel.UpLoadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.UpFileResult> UpLoadFileAsync(string FileName, long FileSize, System.IO.Stream FileStream) {
            ConsoleTest.ServiceReference_CNmsService.UpFile inValue = new ConsoleTest.ServiceReference_CNmsService.UpFile();
            inValue.FileName = FileName;
            inValue.FileSize = FileSize;
            inValue.FileStream = FileStream;
            return ((ConsoleTest.ServiceReference_CNmsService.CNmsService)(this)).UpLoadFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConsoleTest.ServiceReference_CNmsService.DownFileResult ConsoleTest.ServiceReference_CNmsService.CNmsService.DownLoadFile(ConsoleTest.ServiceReference_CNmsService.DownFile request) {
            return base.Channel.DownLoadFile(request);
        }
        
        public long DownLoadFile(long FileID, string FileName, string StrAuth, out bool IsSuccess, out string Message, out System.IO.Stream FileStream) {
            ConsoleTest.ServiceReference_CNmsService.DownFile inValue = new ConsoleTest.ServiceReference_CNmsService.DownFile();
            inValue.FileID = FileID;
            inValue.FileName = FileName;
            inValue.StrAuth = StrAuth;
            ConsoleTest.ServiceReference_CNmsService.DownFileResult retVal = ((ConsoleTest.ServiceReference_CNmsService.CNmsService)(this)).DownLoadFile(inValue);
            IsSuccess = retVal.IsSuccess;
            Message = retVal.Message;
            FileStream = retVal.FileStream;
            return retVal.FileSize;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.DownFileResult> ConsoleTest.ServiceReference_CNmsService.CNmsService.DownLoadFileAsync(ConsoleTest.ServiceReference_CNmsService.DownFile request) {
            return base.Channel.DownLoadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference_CNmsService.DownFileResult> DownLoadFileAsync(long FileID, string FileName, string StrAuth) {
            ConsoleTest.ServiceReference_CNmsService.DownFile inValue = new ConsoleTest.ServiceReference_CNmsService.DownFile();
            inValue.FileID = FileID;
            inValue.FileName = FileName;
            inValue.StrAuth = StrAuth;
            return ((ConsoleTest.ServiceReference_CNmsService.CNmsService)(this)).DownLoadFileAsync(inValue);
        }
    }
}
